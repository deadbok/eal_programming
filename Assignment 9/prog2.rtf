{\rtf1\ansi\uc0\deff0{\fonttbl{\f0\fmodern\fprq1\fcharset0;}}{\colortbl;\red136\green136\blue136;\red186\green33\blue33;\red0\green68\blue221;\red102\green102\blue102;\red64\green128\blue128;\red160\green160\blue0;\red25\green23\blue124;\red0\green128\blue0;\red187\green102\blue136;\red187\green102\blue34;\red136\green0\blue0;\red170\green34\blue255;\red153\green153\blue153;\red0\green160\blue0;\red160\green0\blue0;\red255\green0\blue0;\red128\green0\blue128;\red176\green0\blue64;\red0\green0\blue255;\red187\green187\blue187;\red188\green122\blue0;\red0\green0\blue128;\red125\green144\blue41;\red210\green65\blue58;}\f0 {\cf5\i #!/usr/bin/env python3}\par
{\cf5\i # -*- coding: utf-8 -*-}\par
{\cf5\i # The above lines tell the shell to use python as interpreter when the}\par
{\cf5\i # script is called directly, and that this file uses utf-8 encoding,}\par
{\cf5\i # because of the country specific letter in my surname.}\par
{\cf2\i '''\par
Name: Program 2 "Sum of Digits in a String"\par
Author: Martin Bo Kristensen Gr{\u248}nholdt.\par
Version: 1.0 (2017-01-22)\par
\par
A program that ask for a string non separated of numbers, and sums of each\par
digit of the input.\par
'''}\par
{\cf8\b def} {\cf19 get_numbers}():\par
    {\cf2\i """\par
    Get a string of numbers from the user.\par
\par
    :return: A list all numbers.\par
    """}\par
    {\cf5\i # List for the numbers.}\par
\par
    numbers {\cf4 =} {\cf8 list}()\par
\par
    number_str {\cf4 =} {\cf8 input}({\cf2 '}{\cf2 Input a string of non-separated digits: }{\cf2 '})\par
\par
    {\cf8\b try}:\par
        {\cf5\i #Convert each character to an int, fail and complain if something}\par
        {\cf5\i #cannot be converted.}\par
        {\cf8\b for} ch {\cf12\b in} number_str:\par
            numbers{\cf4 .}append({\cf8 int}(ch))\par
    {\cf8\b except} {\cf24\b ValueError}:\par
        {\cf5\i # Complain when something unexpected was entered.}\par
        {\cf8\b print}({\cf2 '}{\cf10\b \\n}{\cf2 "}{\cf2 \{\}}{\cf2 "}{\cf2  is not a number. Please use only numbers.}{\cf2 '}{\cf4 .}format(ch))\par
        {\cf8 exit}({\cf4 1})\par
\par
    {\cf8\b return} numbers\par
\par
{\cf8\b def} {\cf19 main}():\par
    {\cf2\i '''\par
    Program main entry point.\par
    '''}\par
\par
    numbers {\cf4 =} get_numbers()\par
    {\cf8\b print}({\cf2 "}{\cf10\b \\n}{\cf2 The numbers are: \{\}}{\cf2 "}{\cf4 .}format({\cf8 str}(numbers){\cf4 .}strip({\cf2 '}{\cf2 []}{\cf2 '})))\par
    {\cf8\b print}({\cf2 "}{\cf2 The sum is: \{:0.2f\}}{\cf2 "}{\cf4 .}format({\cf8 sum}(numbers)))\par
\par
{\cf5\i # Run this when invoked directly}\par
{\cf8\b if} __name__ {\cf4 ==} {\cf2 '}{\cf2 __main__}{\cf2 '}:\par
    main()\par
}