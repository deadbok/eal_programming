{\rtf1\ansi\deff0{\fonttbl{\f0\fmodern\fprq1\fcharset0;}}{\colortbl;\red136\green136\blue136;\red186\green33\blue33;\red0\green68\blue221;\red102\green102\blue102;\red64\green128\blue128;\red160\green160\blue0;\red25\green23\blue124;\red0\green128\blue0;\red187\green102\blue136;\red187\green102\blue34;\red136\green0\blue0;\red170\green34\blue255;\red153\green153\blue153;\red0\green160\blue0;\red160\green0\blue0;\red255\green0\blue0;\red128\green0\blue128;\red176\green0\blue64;\red0\green0\blue255;\red187\green187\blue187;\red188\green122\blue0;\red0\green0\blue128;\red125\green144\blue41;\red210\green65\blue58;}\f0{\cf5\i #!/usr/bin/env python3}\par
{\cf5\i # -*- coding: utf-8 -*-}\par
{\cf5\i # The above lines tell the shell to use python as interpreter when the}\par
{\cf5\i # script is called directly, and that this file uses utf-8 encoding,}\par
{\cf5\i # because of the country specific letter in my surname.}\par
{\cf2\i """\par
Name: Program 7 "Cash Register"\par
Author: Martin Bo Kristensen Gr\ud{\u248\'f8}nholdt.\par
Version: 1.0 (2017-02-19)\par
\par
Class that simulates a cash register.\par
"""}\par
\par
\par
{\cf8\b class} {\cf19\b CashRegister}:\par
    {\cf2\i """\par
    CashRegister class.\par
    """}\par
\par
    {\cf8\b def} {\cf19 __init__}({\cf8 self}):\par
        {\cf2\i """\par
        Constructor.\par
        """}\par
        {\cf5\i # List holding the items selected for purchase.}\par
        {\cf8 self}{\cf4 .}__cart {\cf4 =} {\cf8 list}()\par
\par
    {\cf8\b def} {\cf19 purchase_item}({\cf8 self}, new_item):\par
        {\cf2\i """\par
        Purchase an item.\par
\par
        :param item: A RetailItem.\par
        """}\par
        {\cf5\i # Add the item to the cart.}\par
        {\cf5\i # Run through all items and ask each to add it, if it is the owner.}\par
        i {\cf4 =} {\cf4 1}\par
        found {\cf4 =} {\cf8 False}\par
        {\cf8\b if} {\cf8 len}({\cf8 self}{\cf4 .}__cart):\par
            found {\cf4 =} {\cf8 self}{\cf4 .}__cart[{\cf4 0}]{\cf4 .}add_item(new_item{\cf4 .}get_description())\par
            {\cf8\b while} {\cf12\b not} found {\cf12\b and} ({\cf8 len}({\cf8 self}{\cf4 .}__cart) {\cf4 >} i):\par
                found {\cf4 =} {\cf8 self}{\cf4 .}__cart[i]{\cf4 .}add_item(new_item{\cf4 .}get_description())\par
                i {\cf4 +}{\cf4 =} {\cf4 1}\par
\par
        {\cf5\i # No similar RetailItem was in the cart, add this one.}\par
        {\cf8\b if} {\cf12\b not} found:\par
            {\cf8 self}{\cf4 .}__cart{\cf4 .}append(new_item)\par
\par
    {\cf8\b def} {\cf19 get_total}({\cf8 self}):\par
        {\cf2\i """\par
        Get the total price of the items in the cart.\par
\par
        :return: Total price of items in the cart.\par
        """}\par
        ret {\cf4 =} {\cf4 0}\par
        {\cf8\b for} item {\cf12\b in} {\cf8 self}{\cf4 .}__cart:\par
            ret {\cf4 +}{\cf4 =} item{\cf4 .}get_price() {\cf4 *} item{\cf4 .}get_inventory()\par
\par
        {\cf8\b return} (ret)\par
\par
    {\cf8\b def} {\cf19 show_items}({\cf8 self}):\par
        {\cf2\i """\par
        Print all items in the cart.\par
        """}\par
        {\cf5\i # Print the items in a table, first the header.}\par
        {\cf8\b print}({\cf2 '}{\cf10\b \\n}{\cf2 ------------------------------------------------------}{\cf2 '} {\cf4 +}\par
              {\cf2 '}{\cf2 -----------}{\cf2 '})\par
        {\cf8\b print}({\cf2 '}{\cf2 | #         | Description          | Units in cart |}{\cf2 '} {\cf4 +}\par
              {\cf2 '}{\cf2  Price      |}{\cf2 '})\par
        {\cf8\b print}({\cf2 '}{\cf2 ------------------------------------------------------}{\cf2 '} {\cf4 +}\par
              {\cf2 '}{\cf2 -----------}{\cf2 '})\par
        {\cf5\i # Print the items.}\par
        {\cf8\b for} i {\cf12\b in} {\cf8 range}({\cf8 len}({\cf8 self}{\cf4 .}__cart)):\par
            item {\cf4 =} {\cf8 self}{\cf4 .}__cart[i]\par
            {\cf8\b print}(\par
                {\cf2 '}{\cf2 | Item \{:4\} | \{:>20\} |}{\cf2 '}{\cf4 .}format(i {\cf4 +} {\cf4 1}, item{\cf4 .}get_description()),\par
                end{\cf4 =}{\cf2 '}{\cf2 '})\par
            {\cf8\b print}({\cf2 '}{\cf2  \{:13.0f\} | \{:10.2f\} |}{\cf2 '}{\cf4 .}format(item{\cf4 .}get_inventory(),\par
                                                  item{\cf4 .}get_price() {\cf4 *} item{\cf4 .}get_inventory()))\par
\par
        {\cf5\i # Handle empty table.}\par
        {\cf8\b if} {\cf12\b not} {\cf8 len}({\cf8 self}{\cf4 .}__cart):\par
            {\cf8\b print}(\par
                {\cf2 '}{\cf2 | No items                                        }{\cf2 '} {\cf4 +}\par
                {\cf2 '}{\cf2               |}{\cf2 '})\par
        {\cf5\i # Close the table.}\par
        {\cf8\b print}({\cf2 '}{\cf2 -------------------------------------------------------}{\cf2 '} {\cf4 +}\par
              {\cf2 '}{\cf2 ----------}{\cf2 '})\par
        {\cf8\b print}({\cf2 '}{\cf2 Total price: \{:10.2f\}}{\cf2 '}{\cf4 .}format({\cf8 self}{\cf4 .}get_total()))\par
\par
    {\cf8\b def} {\cf19 clear}({\cf8 self}):\par
        {\cf2\i """\par
        Clear the cart.\par
        """}\par
        {\cf8 self}{\cf4 .}__cart {\cf4 =} {\cf8 list}()\par
}